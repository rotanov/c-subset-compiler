{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"f",
				"fvalue	int"
			],
			[
				"ETE_S",
				"ETE_SIX	ETestEnum"
			],
			[
				"design",
				"designator-list"
			],
			[
				"initi",
				"initializer"
			],
			[
				"init-lis",
				"initializer-list"
			],
			[
				"typed",
				"typedef-name"
			],
			[
				"spec",
				"specifier-qualifier-list"
			],
			[
				"exc",
				"exclusive-OR-expression"
			],
			[
				"unar",
				"unary-operator"
			],
			[
				"floa",
				"floating-literal"
			],
			[
				"for",
				"fori	for i,v in ipairs()"
			],
			[
				"Spr",
				"SpriteId"
			],
			[
				"s",
				"sym	Uint16"
			],
			[
				"min",
				"min"
			],
			[
				"b",
				"beginend	$1.begin(), $1.end()"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/D/dev/ncc/include/expressions.h",
			"settings":
			{
				"buffer_size": 7996,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "Type-correctness-stuff.txt\n\nSee 6.3.2.1\n\nl-values and r-values\n\nThe following object types are lvalues, but not modifiable lvalues:\n\n    An array type\n    An incomplete type\n    A const-qualified type\n    A structure or union type with one of its members qualified as a const type\n\nRvalues always have complete types or the void type.\n\nC defines a function designator as an expression that has function type. A function designator is distinct from an object type or an lvalue. It can be the name of a function or the result of dereferencing a function pointer. The C language also differentiates between its treatment of a function pointer and an object pointer.\n\nCertain operators require lvalues for some of their operands. The table below lists these operators and additional constraints on their usage.\nOperator    Requirement\n& (unary)   Operand must be an lvalue.\n++ --   Operand must be an lvalue. This applies to both prefix and postfix forms.\n= += -= *= %= <<= >>= &= ‸= |=  Left operand must be an lvalue.\n\n\n*(int*)1",
			"settings":
			{
				"buffer_size": 1026,
				"line_ending": "Windows",
				"name": "Type-correctness-stuff.txt"
			}
		},
		{
			"file": "/D/dev/ncc/include/codegen.h",
			"settings":
			{
				"buffer_size": 7860,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/dev/ncc/src/expressions.cpp",
			"settings":
			{
				"buffer_size": 27436,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "// int notMain()\n// {\n//     return 0;\n// }\n\n// int main()\n// {\n\n// }\n\n// int notMain2()\n// {\n//     return 0;\n// }\n\n// void VoidNoParams()\n// {\n\n// }\n\n// void Void2Params(int a, float b)\n// {\n\n// }\n\n//#pragma pack(1)\n\n//\n\n// struct Foo\n// {\n//     int a;\n//     int b;\n//     char c;\n// };\n\n// int a = 2;\n// struct Foo f;\n// float b;\n// char c = 3;\n// int bar[10];\n// int* ptr;\n// struct Foo* fooPtr;\n// char chararrfour[4];\n// int sizeCalc[2 * 4 + 1];\n// int initialized[] = {1, 2, 3, 10, 16,};\n// int arrayOfArray[2][3];\n// struct Foo arrayOfStruct[2][3];\n// float initFloat = 0.001f;\n\n//////////////////////////////////////////////////\n\n// int foo()\n// {\n//     return 2;\n// }\n\n// char* string = \"pe\";\n// char* anoos = \"a\";\n// int fooInit;\n// int singleElementArray[1];\n\n// int main()\n// {\n//     int bar = foo();\n//     char* temp = \"abcde\";\n//     fooInit = foo();\n// }\n\n//////////////////////////////////////////////////\n\n// const int a = 2;\n// const int c = 3;\n// int b[sizeof(a)];\n// int e[sizeof(b)];\n\n//\n\n\n// char* a = \"abc\";\n// char b[3] = {'a', 'b', 'c'};\n// char c[3] = \"abc\";\n// char d[] = \"abc\";\n// char e[4] = \"abc\";\n// int asize = sizeof(a);\n// int bsize = sizeof(b);\n// int csize = sizeof(c);\n// int dsize = sizeof(d);\n// int esize = sizeof(e);\n\n// char f[1] = \"abc\";\n// int fsize = sizeof(f);\n\n// int aa;\n// char ddd[4];\n\n// int main()\n// {\n//     char* foo = \"abcdef\";\n//     char bar[4] = \"cdefghajs\";\n//     foo = d + 1;\n// }\n\n\n//int a[2][2] = {{1, 2}, {2, 3}};\n\n//char a[10] = \"a\";\n\n// int a  = { 2};\n\n// struct Foo\n// {\n//     char c;\n//     int a1;\n//     char a;\n//     int a2;\n//     char d;\n//     int a3;\n// } foo =  {1, 2, 1, 2, 1, 2};\n\n///////////////////////////////////////////////\n\n// struct Foo\n// {\n//     char c;\n//     int a;\n// }*** bar;\n\n// int main()\n// {\n//     int a;\n//     //a = 2;\n//     (**bar)->a = 2;\n// }\n\n////////////////////////////////////////////////////\n\n// int foo()\n// {\n//     return 2;\n// }\n\n// int (**bar)();\n\n// int main()\n// {\n//     bar = foo;\n//     printf(\"%d\", bar());\n// }\n//////////////////////////////////////////////////////\n\n// typedef int (*fptr)();\n// typedef int f();\n\n// void foo(void* bar)\n// {\n//    ((fptr)bar)();\n// }\n\n// void bar(f baz)\n// {\n\n// }\n\n// void zak(int baz())\n// {\n//   baz();\n// }\n\n// int foobar()\n// {\n//     return 2;\n// }\n\n// int main()\n// {\n//     zak(foobar);\n// }\n//////////////////////////////////////////////////////\n\n// typedef int a();\n\n// a b;\n\n// int main()\n// {\n//   //a e;\n// }\n\n// a e\n// {\n// return 2;\n// }\n//////////////////////////////////////////////////////\n\n// struct pes\n// {\n//     char a;\n//     int c;\n//     char b;\n//     int e, f, g, h;\n// } p, f;\n\n// int main()\n// {\n//   p = f;\n// }\n\n//////////////////////////////////////////////////////\n// struct Pes\n// {\n//    int sep;\n// } pes;\n\n// int main()\n// {\n//     int a, b;\n//     a = b > 0 ? pes : b;\n// }\n/////////////\n\n// lol bug\n// struct pes\n// {\n// const int a[10];\n// char c;\n// };\n\n// struct yes\n// {\n//     struct pes a;\n//     int b;\n// }a, b;\n\n// int main()\n// {\n//     a = b;\n// }\n\n////////////////////////////////\n\n// int foo()\n// {\n\n// }\n\n// int main()\n// {\n//     *&foo = &foo;\n// }\n\n////////////////////////// WOW padding got zeroed if I {{1}}\n// struct Foo\n// {\n//     char c;\n//     int i;\n//     int j;\n// };\n\n// int main()\n// {\n//     struct Foo foo = {{1};\n// }\n\n// int main()\n// {\n//     int a = 2;\n//     int b = a + 1;\n//     int c[2] = { 2, 1};\n// }\n\n// struct Bar\n// {\n//     char a4;\n//     char a3[2];\n//     int a;\n// } baz[2] = {2, 3, 4, 5, 6, 7};\n\n// int barsize = sizeof(struct Bar);\n// int bazsize = sizeof (baz);\n\n// char a3[3];\n\n// char p;\n// int aaa;\n// char p2;\n\n// void bar(char* arg)\n// {\n\n// }\n\n// char eeff[5] = {'e', 'e', 'f', 'g', 'g'};\n\n// char* a = \"a\\0 foo\";\n\n// int main()\n// {\n//     char* b = \"b foo\";\n//     bar(\"c foo\");\n// }\n\n// int sizeofa = sizeof(a);\n\n//////////////////////////////////////////////////////////////\n\n// struct Foo\n// {\n//     int a;\n//     char c;    \n// };\n\n// int size = sizeof(struct Foo);\n\n\n////////////////////////////////////\n// char c = 1;\n// char b = 2;\n\n/////////////////////////////////////////////////////////////////\n\n// char a3[3];\n\n// char p;\n// int aaa;\n// char p2;\n\n// void bar(char* arg)\n// {\n\n// }\n\n// char eeff[5] = {'e', 'e', 'f', 'g', 'g'};\n\n// char* a = \"a\\0 foo\";\n\n// int main()\n// {\n//     char* b = \"b foo\";\n//     bar(\"c foo\");\n// }\n\n// int sizeofa = sizeof(a);\n////////////////////////////////////////////////////////////\n// int aaaa;\n// char* a = \"abaaa\";\n// char* b = \"ab\";\n///////////////////////////////////////////////////////////////\n// int a;\n// int c;\n// int* b = &a + 1;\n////////////////////////////////////////////////////////////////\n// struct foo{int a;} bar = {{{1}}};\n//////////////////////////////////////////////////////////////////////\n",
			"file": "sandbox/vs-toasm/test.cpp",
			"file_size": 5270,
			"file_write_time": 130371195056665917,
			"settings":
			{
				"buffer_size": 4821,
				"line_ending": "Windows"
			}
		},
		{
			"file": "sandbox/vs-toasm/test.asm",
			"settings":
			{
				"buffer_size": 324,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/dev/ncc/src/codegen.cpp",
			"settings":
			{
				"buffer_size": 36250,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Program Files (x86)/Microsoft Visual Studio 12.0/VC/include/listing.inc",
			"settings":
			{
				"buffer_size": 2330,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "8[23:10:56] K-1: http://www.youtube.com/watch?v=28EHxPeNDag http://www.youtube.com/watch?v=9Zn0nF4UizI - из гильти крауна\n---------------------------------------------------------------------------------------\n8[23:16:39] K-1: любимое из йормунганда - http://www.youtube.com/watch?v=tAG-cAhvUV8 http://www.youtube.com/watch?v=gFZbhZ2QhR8\n8[23:21:21] K-1: осты из гурлага выкладывать не буду по очевидной причине, осты из ГАЧЧИ (самый смак, хотя оно по этичности местами хлеще гурлага) - http://www.youtube.com/watch?v=6lbOi9XJcOg http://www.youtube.com/watch?v=uYhRg9Bq4Zs http://www.youtube.com/watch?v=pPtb7bV7jl4 http://www.youtube.com/watch?v=6kOmnN3OLPc",
			"settings":
			{
				"buffer_size": 658,
				"line_ending": "Windows",
				"name": "8[23:10:56] K-1: http://www.youtube.com/watch?v=28"
			}
		},
		{
			"contents": "\nдалее :\n33 , 121 , (60 - надо будет ещё раз обсудить),\nну и в последнюю очередь в добавок 117, 115 .\n\nЧо надо решить по fefu-mmorpg\n\n1. в чём писать доки по протоколу\n\n    а) markdown\n    б) reST\n\n2. определиться с permanent storage, кандидаты\n    \n    а) postgresql\n\n        http://www.postgresql.org/docs/7.2/static/libpqplusplus.html\n\n    б) sqlite\n    в) berkeleydb\n\n3. глянуть на boost ASIO здесь http://think-async.com/\n\n\n4. определиться с либой про вебсокеты, читать это \n    \n    http://www.altdevblogaday.com/2012/02/01/controlling-your-game-engine-over-websocket/\n\n    http://libwebsockets.org/trac/libwebsockets\n\n    http://stackoverflow.com/questions/3916217/standalone-c-or-c-websocket-server-library\n\n\n5. определиться с http либой для с++\n\n    http://casablanca.codeplex.com/\n\n    http://cpp-netlib.org/ говно\n\n    http://www.jenkinssoftware.com/features.html\n\n    POCO\n\n    http://schneide.wordpress.com/2011/02/07/ssl-with-poco/\n    http://pocoproject.org/download/index.html\n    http://xjia.heroku.com/2011/09/10/learning-poco-get-with-http/\n\n    тёма взял wt\n\n\n6. определиться как обходить защиту XSS уязвимости, например \n\n    http://en.wikipedia.org/wiki/Cross-origin_resource_sharing\n\n    http://en.wikipedia.org/wiki/JSONP\n\n    http://stackoverflow.com/questions/15005500/loading-cross-domain-html-page-with-jquery-ajax\n\n7. осмотреть проекты предыдущих соискателей успеха\n\n    https://bitbucket.org/GlassCube/game\n\n    https://bitbucket.org/lanior/mysterious-bomberman/src\n\n    https://github.com/lobodin/ftw-game-protocol\n\n\n8. Задания Олейникова Петрухи\n\n    http://imcs.dvfu.ru/works/course_view?id=16635;year=2014\n\n9. Определиться с говном для тестирования js\n\n    mocha\n    phantomjs\n    node.js\n\n10. чтобы просраться через роутер: \n    https://github.com/miniupnp/miniupnp\n    http://miniupnp.free.fr/\n    http://www.codeproject.com/Articles/13285/Using-UPnP-for-Programmatic-Port-Forwardings-and-N\n\n    DeviceSpy\n\n11. поставить wireshark",
			"file": "/C/Users/mapho_000/Downloads/gistf79acdd746cd8efc21bc-53b83f8a06e0fbf3d7c0580c404595dd890b0742/asdf.txt",
			"file_size": 2486,
			"file_write_time": 130375303134070007,
			"settings":
			{
				"buffer_size": 1966,
				"line_ending": "Windows",
				"name": "таски под номерами:"
			}
		},
		{
			"file": "/D/dev/whiterra/repo/doc/tasks.todo",
			"settings":
			{
				"buffer_size": 13357,
				"line_ending": "Windows"
			}
		},
		{
			"file": "doc/unrelated-docs-and-lectures/codegen1.txt",
			"settings":
			{
				"buffer_size": 3085,
				"line_ending": "Windows"
			}
		},
		{
			"file": "doc/unrelated-docs-and-lectures/codegen2.txt",
			"settings":
			{
				"buffer_size": 1372,
				"line_ending": "Windows"
			}
		},
		{
			"file": "doc/grammar.txt",
			"settings":
			{
				"buffer_size": 8759,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 86.0,
		"selected_items":
		[
			[
				"githmarkpre",
				"Markdown Preview: Github Flavored Markdown: Preview in Browser"
			],
			[
				"gith mark",
				"Markdown Preview: Github Flavored Markdown: Preview in Browser"
			],
			[
				"preview bro",
				"Markdown Preview: Github Flavored Markdown: Preview in Browser"
			],
			[
				"pewvoew",
				"Markdown Preview: Github Flavored Markdown: Preview in Browser"
			],
			[
				"preview mark",
				"Markdown Preview: Python Markdown: Preview in Browser"
			],
			[
				"preview brow",
				"Markdown Preview: Github Flavored Markdown: Preview in Browser"
			],
			[
				"markdown",
				"Markdown Preview: Open Markdown Cheat sheet"
			],
			[
				"preview githbr",
				"Markdown Preview: Github Flavored Markdown: Preview in Browser"
			],
			[
				"github",
				"Markdown Preview: Github Flavored Markdown: Preview in Browser"
			],
			[
				"markwbro",
				"Markdown Preview: Python Markdown: Preview in Browser"
			],
			[
				"markgitbrow",
				"Markdown Preview: Github Flavored Markdown: Preview in Browser"
			],
			[
				"gibro",
				"Markdown Preview: Github Flavored Markdown: Preview in Browser"
			],
			[
				"gmabro",
				"Markdown Preview: Github Flavored Markdown: Preview in Browser"
			],
			[
				"gitmarkdownbro",
				"Markdown Preview: Github Flavored Markdown: Preview in Browser"
			],
			[
				"preview in bro",
				"Markdown Preview: Github Flavored Markdown: Preview in Browser"
			],
			[
				"mark prev gith",
				"Markdown Preview: Github Flavored Markdown: Preview in Browser"
			],
			[
				"inst pack",
				"Package Control: Install Package"
			],
			[
				"remove pack",
				"Package Control: Remove Package"
			],
			[
				"Package Control: li",
				"Package Control: List Packages"
			],
			[
				"pack contr remo",
				"Package Control: Remove Package"
			],
			[
				"InstPack",
				"Package Control: Install Package"
			],
			[
				"Markdo",
				"Set Syntax: Markdown"
			],
			[
				"Syntax sh",
				"Set Syntax: Shell Script (Bash)"
			],
			[
				"hex",
				"Hex Viewer: Toggle Hex View"
			],
			[
				"list pac",
				"Package Control: List Packages"
			],
			[
				"instpack",
				"Package Control: Install Package"
			],
			[
				"package control ",
				"Package Control: Discover Packages"
			],
			[
				"pack con ",
				"Package Control: List Packages"
			],
			[
				"C++",
				"Set Syntax: C++"
			],
			[
				"lua",
				"Set Syntax: Lua"
			],
			[
				"upgrapack",
				"Package Control: Upgrade Package"
			],
			[
				"upgapa",
				"Package Control: Upgrade Package"
			],
			[
				"uppack",
				"Package Control: Upgrade Package"
			],
			[
				"packli",
				"Package Control: List Packages"
			],
			[
				"lower",
				"Convert Case: Lower Case"
			],
			[
				"INSTPA",
				"Package Control: Install Package"
			],
			[
				"hex lit",
				"Hex Viewer: Toggle Endianness (Big|Little)"
			],
			[
				"inst packa",
				"Package Control: Install Package"
			],
			[
				"diff",
				"FileDiffs: Menu"
			],
			[
				"instpa",
				"Package Control: Install Package"
			],
			[
				"set synt HT",
				"Set Syntax: HTML (Tcl)"
			],
			[
				"instpac",
				"Package Control: Install Package"
			],
			[
				"json",
				"Pretty JSON: Reformat (Pretty Print) JSON"
			],
			[
				"batch",
				"Set Syntax: Batch File"
			],
			[
				"lua dev",
				"Set Syntax: Lua Dev"
			],
			[
				"lua d",
				"Set Syntax: Lua Dev"
			],
			[
				"syn bat",
				"Set Syntax: Batch File"
			],
			[
				"synjson",
				"Set Syntax: JSON"
			],
			[
				"syn jso",
				"Set Syntax: JSON"
			],
			[
				"syn json",
				"Set Syntax: SJSON"
			],
			[
				"syn j",
				"Set Syntax: JSON"
			],
			[
				"Package Control: ",
				"Package Control: Upgrade Package"
			],
			[
				"inspack",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"tasks",
				"Tasks: Cancel"
			],
			[
				"Tasks",
				"Tasks: Archive"
			],
			[
				"c++",
				"Set Syntax: C++"
			],
			[
				"unf",
				"Code Folding: Unfold All"
			],
			[
				"ww",
				"Word Wrap: Toggle"
			],
			[
				"add fol",
				"Project: Add Folder"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"ipacka",
				"Package Control: Install Package"
			],
			[
				"pack insta",
				"Package Control: Install Package"
			],
			[
				"color",
				"Color picker"
			],
			[
				"install package",
				"Package Control: Install Package"
			],
			[
				"INSTAL",
				"Package Control: Install Package"
			],
			[
				"packin",
				"Package Control: Install Package"
			],
			[
				"css",
				"Set Syntax: CSS"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"sjson",
				"Set Syntax: SJSON"
			],
			[
				"installP",
				"Package Control: Install Package"
			],
			[
				"scala",
				"Set Syntax: Scala"
			],
			[
				"s bat",
				"Set Syntax: Batch File"
			],
			[
				"synta bat",
				"Set Syntax: Batch File"
			],
			[
				"plain",
				"Set Syntax: Plain Text"
			],
			[
				"toglmenu",
				"View: Toggle Menu"
			],
			[
				"to",
				"View: Toggle Menu"
			],
			[
				"togglemen",
				"View: Toggle Menu"
			],
			[
				"xml",
				"Set Syntax: XML"
			],
			[
				"upper",
				"Convert Case: Upper Case"
			],
			[
				"open",
				"View: Toggle Open Files in Side Bar"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"jso",
				"Set Syntax: JSON"
			],
			[
				"C+",
				"Set Syntax: C++"
			],
			[
				"markdow",
				"Markdown Preview: preview in Sublime Text"
			],
			[
				"mark",
				"Markdown Preview: preview in Browser"
			],
			[
				"toggle",
				"View: Toggle Menu"
			],
			[
				"Preview in bro",
				"Markdown Preview: preview in Browser"
			],
			[
				"mark pre bro",
				"Markdown Preview: preview in Browser"
			],
			[
				"bro",
				"Markdown Preview: preview in Browser"
			],
			[
				"brower",
				"Markdown Preview: preview in Browser"
			],
			[
				"cheatsh",
				"Markdown Preview: open Markdown Cheat sheet"
			],
			[
				"mabr",
				"Markdown Preview: preview in Browser"
			],
			[
				"Markdow",
				"Markdown Preview: preview in Browser"
			],
			[
				"toggle men",
				"View: Toggle Menu"
			],
			[
				"package Con Dis",
				"Package Control: Disable Package"
			],
			[
				"install pac",
				"Package Control: Install Package"
			],
			[
				"txt",
				"Set Syntax: Plain Text"
			],
			[
				"log",
				"Set Syntax: LaTeX Log"
			],
			[
				"pa",
				"Package Control: Remove Package"
			],
			[
				"makef",
				"Set Syntax: Makefile"
			],
			[
				"jq",
				"Set Syntax: jQuery (JavaScript)"
			],
			[
				"install package ",
				"Package Control: Install Package"
			],
			[
				"installPackage ",
				"Package Control: Install Package"
			],
			[
				"installpa",
				"Package Control: Install Package"
			],
			[
				"install pack",
				"Package Control: Install Package"
			],
			[
				"installPa",
				"Package Control: Install Package"
			],
			[
				"mako",
				"Set Syntax: HTML (Mako)"
			],
			[
				"brack",
				"Bracket Highlighter: Match Brackets"
			],
			[
				"html",
				"HTML: Encode Special Characters"
			],
			[
				"emmet",
				"Emmet: Expand Abbreviation"
			],
			[
				"Pack ins",
				"Package Control: Install Package"
			],
			[
				"user",
				"Preferences: Settings - User"
			],
			[
				"mak",
				"Markdown Preview: preview in Browser"
			],
			[
				"clang",
				"Preferences: SublimeClang Settings – Default"
			],
			[
				"sublim",
				"Preferences: SublimeClang Settings – User"
			],
			[
				"pack up",
				"Package Control: Upgrade Package"
			],
			[
				"mard",
				"Markdown Preview: preview in Browser"
			],
			[
				"asm",
				"Set Syntax: Assembly x86 Intel (FASM)"
			],
			[
				"package insta",
				"Package Control: Install Package"
			],
			[
				"markdo",
				"Markdown Preview: preview in Browser"
			],
			[
				"markd",
				"Markdown Preview: preview in Browser"
			],
			[
				"makio",
				"Markdown Preview: preview in Browser"
			],
			[
				"package ins",
				"Package Control: Install Package"
			],
			[
				"pack in",
				"Package Control: Install Package"
			],
			[
				"sy C++",
				"Set Syntax: C++"
			]
		],
		"width": 562.0
	},
	"console":
	{
		"height": 160.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/D/dev/QtWebsocket/Example/ServerThreaded/ServerThreaded.pro",
		"/D/dev/fefu-mmorpg/README.md",
		"/D/dev/fefu-mmorpg-protocol/README.md",
		"/D/dev/QtWebsocket/Example/ServerThreaded/main.cpp",
		"/D/dev/QtWebsocket/Example/ServerThreaded/ServerThreaded.h",
		"/D/dev/QtWebsocket/QtWebsocket.pro",
		"/D/dev/fefu-mmorpg/fefu-mmorpg.pro",
		"/D/dev/game-indie-zadrawch/Intro.md",
		"/C/portableApplications/Sublime/Data/Packages/Markdown Preview/sample.md",
		"/D/dev/fefu-mmorpg/bin/static/index.html",
		"/C/Users/mapho_000/Dropbox/published/Intro.html",
		"/D/dev/compiler/sandbox/vs-toasm/do.bat",
		"/D/dev/fefu-mmorpg-protocol/auth.md",
		"/D/dev/fefu-mmorpg/bin/static/chugun.css",
		"/D/dev/fefu-mmorpg/.gitignore",
		"/D/dev/fefu-mmorpg/server/main.cpp",
		"/D/dev/fefu-mmorpg/server/server.cpp",
		"/D/dev/qhttpserver/examples/examples.pro",
		"/D/dev/qhttpserver/qhttpserver.pri",
		"/D/dev/qhttpserver/qhttpserver.pro",
		"/D/dev/qhttpserver/TODO",
		"/D/dev/qhttpserver/README.md",
		"/C/Users/mapho_000/Downloads/fuck/fuck/jscript.js",
		"/D/dev/codestyle.cpp",
		"/C/Users/mapho_000/Downloads/proba.txt",
		"/D/dev/fefu-mmorpg/static/index.html",
		"/D/dev/fefu-mmorpg/static/chugun.css",
		"/C/Users/mapho_000/Downloads/fuck/fuck/style.css",
		"/C/Users/mapho_000/Desktop/#трисемёрки #Прислал_Пахом.txt",
		"/C/Users/mapho_000/Downloads/gistf79acdd746cd8efc21bc-53b83f8a06e0fbf3d7c0580c404595dd890b0742/asdf.txt",
		"/C/Users/mapho_000/Downloads/gistf79acdd746cd8efc21bc-53b83f8a06e0fbf3d7c0580c404595dd890b0742/asdf",
		"/C/Users/mapho_000/Downloads/gistf79acdd746cd8efc21bc-53b83f8a06e0fbf3d7c0580c404595dd890b0742/╨▓╨╛╨┐╤А╨╛╤Б╤Л",
		"/C/Users/mapho_000/Downloads/gistf79acdd746cd8efc21bc-53b83f8a06e0fbf3d7c0580c404595dd890b0742/╨┐╨╛",
		"/C/Users/mapho_000/Downloads/gistf79acdd746cd8efc21bc-53b83f8a06e0fbf3d7c0580c404595dd890b0742/╨║╤Г╤А╤Б╤Г",
		"/C/Users/mapho_000/Downloads/gistf79acdd746cd8efc21bc-53b83f8a06e0fbf3d7c0580c404595dd890b0742/╨░╤А╤Е╨╕╤В╨╡╨║╤В╤Г╤А╨░",
		"/C/Users/mapho_000/Downloads/gistf79acdd746cd8efc21bc-53b83f8a06e0fbf3d7c0580c404595dd890b0742/╨┐╨║",
		"/D/dev/boost_1_55_0/boost/coroutine/attributes.hpp",
		"/D/dev/boost_1_55_0/boost/coroutine/all.hpp",
		"/D/dev/boost_1_55_0/boost/coroutine/coroutine.hpp",
		"/D/dev/boost_1_55_0/boost/coroutine/detail/config.hpp",
		"/D/dev/boost_1_55_0/boost/coroutine/v1/coroutine.hpp",
		"/C/Users/mapho_000/Downloads/phantomjs-1.9.7-windows/phantomjs-1.9.7-windows/examples/colorwheel.js",
		"/C/Users/mapho_000/Downloads/phantomjs-1.9.7-windows/phantomjs-1.9.7-windows/examples/tweets.js",
		"/C/Users/mapho_000/Downloads/IDZ8.txt",
		"/D/dev/cpp-netlib/build/http/test/v2/client/units/CMakeFiles/cpp-netlib-http-v2-response_test.dir/link.txt",
		"/D/dev/cpp-netlib/build/http/test/v2/client/units/CMakeFiles/cpp-netlib-http-v2-request_test.dir/link.txt",
		"/D/dev/cpp-netlib/build/http/test/v2/client/units/CMakeFiles/cpp-netlib-http-v2-request_options_test.dir/link.txt",
		"/D/dev/cpp-netlib/build/http/test/v2/client/units/CMakeFiles/cpp-netlib-http-v2-client_test.dir/link.txt",
		"/D/dev/cpp-netlib/build/http/test/v2/client/units/CMakeFiles/cpp-netlib-http-v2-client_resolution_test.dir/link.txt",
		"/D/dev/cpp-netlib/build/http/test/v2/client/units/CMakeFiles/cpp-netlib-http-v2-client_options_test.dir/link.txt",
		"/D/dev/cpp-netlib/build/http/test/v2/client/units/CMakeFiles/cpp-netlib-http-v2-byte_source_test.dir/link.txt",
		"/D/dev/cpp-netlib/build/http/test/v2/client/features/CMakeFiles/cpp-netlib-http-v2-ssl_connection_test.dir/link.txt",
		"/D/dev/cpp-netlib/build/http/test/v2/client/features/CMakeFiles/cpp-netlib-http-v2-normal_connection_test.dir/link.txt",
		"/D/dev/cpp-netlib/build/http/test/v2/client/features/CMakeFiles/cpp-netlib-http-v2-http_client_test.dir/link.txt",
		"/D/dev/cpp-netlib/build/http/test/v2/client/features/CMakeFiles/cpp-netlib-http-v2-async_resolver_test.dir/link.txt",
		"/D/dev/cpp-netlib/build/http/test/CMakeFiles/cpp-netlib-http-server_test.dir/link.txt",
		"/D/dev/cpp-netlib/build/http/test/CMakeFiles/cpp-netlib-http-server_simple_sessions_test.dir/link.txt",
		"/D/dev/cpp-netlib/build/http/test/CMakeFiles/cpp-netlib-http-server_dynamic_dispatcher_test.dir/link.txt",
		"/D/dev/cpp-netlib/build/http/test/CMakeFiles/cpp-netlib-http-server_default_connection_manager_test.dir/link.txt",
		"/D/dev/cpp-netlib/build/http/test/CMakeFiles/cpp-netlib-http-response_test.dir/link.txt",
		"/D/dev/cpp-netlib/build/http/test/CMakeFiles/cpp-netlib-http-response_incremental_parser_test.dir/link.txt",
		"/D/dev/cpp-netlib/build/http/test/CMakeFiles/cpp-netlib-http-request_test.dir/link.txt",
		"/D/dev/cpp-netlib/build/http/test/CMakeFiles/cpp-netlib-http-request_base_test.dir/link.txt",
		"/D/dev/cpp-netlib/build/uri/test/CMakeFiles/uri_builder_test.dir/link.txt",
		"/D/dev/cpp-netlib/build/uri/test/CMakeFiles/uri_comparison_test.dir/link.txt",
		"/D/dev/cpp-netlib/build/uri/test/CMakeFiles/uri_encoding_test.dir/link.txt",
		"/D/dev/cpp-netlib/build/uri/test/CMakeFiles/uri_normalization_test.dir/link.txt",
		"/D/dev/cpp-netlib/build/uri/test/CMakeFiles/uri_reference_test.dir/link.txt",
		"/D/dev/cpp-netlib/build/uri/test/CMakeFiles/uri_resolve_test.dir/link.txt",
		"/D/dev/cpp-netlib/build/uri/test/CMakeFiles/uri_stream_test.dir/link.txt",
		"/D/dev/cpp-netlib/build/uri/test/CMakeFiles/uri_test.dir/link.txt",
		"/D/dev/cpp-netlib/CMakeLists.txt",
		"/D/dev/cpp-netlib/http/src/CMakeLists.txt",
		"/D/dev/cpp-netlib/http/test/CMakeLists.txt",
		"/D/dev/cpp-netlib/uri/CMakeLists.txt",
		"/D/dev/cpp-netlib/uri/src/network/uri/config.hpp",
		"/D/dev/cpp-netlib/build/Makefile",
		"/D/dev/cpp-netlib/uri/README.rst",
		"/D/dev/cpp-netlib/uri/src/CMakeLists.txt",
		"/D/dev/cpp-netlib/uri/test/CMakeLists.txt",
		"/D/dev/cpp-netlib/build/uri/test/Makefile",
		"/D/dev/cpp-netlib/build/uri/Makefile",
		"/C/Qt/Qt5.2.0-mingw48-opengl-x86/Tools/mingw48_32/opt/lib/python2.7/config/Makefile",
		"/D/dev/cpp-netlib/package.sh",
		"/D/dev/cpp-netlib/RATIONALE.txt",
		"/D/dev/cpp-netlib/README.rst",
		"/D/dev/cpp-netlib/deps/asio/asio/include/asio.hpp",
		"/C/Users/mapho_000/Downloads/openssl-1.0.1f.tar/openssl-1.0.1f/openssl-1.0.1f/INSTALL.W32",
		"/C/Users/mapho_000/Downloads/openssl-1.0.1f.tar/openssl-1.0.1f/openssl-1.0.1f/README",
		"/C/portableApplications/miranda-ng-v0.94.8_x64/Profiles/Satana/Logs/Jabber.ru/fefu-mmorpg-study@conference.jabber.ru.log",
		"/C/Users/mapho_000/Downloads/cpp-netlib-0.11.0/cpp-netlib-0.11.0-final/CMakeLists.txt",
		"/D/temp.txt",
		"/D/dev/boost_1_55_0/build.log",
		"/D/dev/boost_1_55_0/bootstrap.log",
		"/D/dev/boost_1_55_0/INSTALL",
		"/C/Users/mapho_000/Downloads/cpp-netlib-0.11.0/cpp-netlib-0.11.0-final/README.rst",
		"/C/portableApplications/miranda-ng-v0.94.8_x64/Profiles/Satana/Logs/Jabber.ru/g+ch@vox.hangar.tk.log",
		"/D/dev/whiterra/repo/bin/data/translation.ini",
		"/D/dev/whiterra/repo/bin/data/interface/statistics.ini",
		"/C/Users/mapho_000/Downloads/kai/kai/2/script.sh",
		"/C/Users/mapho_000/Downloads/kai/kai/1/script.sh",
		"//UBUNTU/Dev/os/a0/t1/do.sh",
		"/C/Users/mapho_000/Downloads/kai/kai/1/cheat.sh",
		"//UBUNTU/Dev/os/a0/t0/do.sh",
		"//UBUNTU/Dev/os/a0/t1/t3.txt",
		"//UBUNTU/Dev/os/a0/t1/t1.txt",
		"//UBUNTU/Dev/os/a0/t1/t2.txt",
		"//UBUNTU/Dev/os/a0/t1/t4.txt",
		"//UBUNTU/Dev/os/a0/t1/t5.txt",
		"/C/portableApplications/miranda-ng-v0.94.8_x64/Profiles/Satana/Logs/Jabber.ru/shinkai_project@conference.jabber.ru.log",
		"/C/portableApplications/miranda-ng-v0.94.8_x64/Profiles/Satana/Logs/IRCHighway/#iichan - IRCHighway.log",
		"/D/dev/compiler/sandbox/do.bat",
		"/C/Users/mapho_000/AppData/Local/Temp/buzzard.c",
		"/C/Users/mapho_000/AppData/Local/Temp/stb.h",
		"/C/portableApplications/miranda-ng-v0.94.8_x64/Profiles/Satana/Logs/Jabber.ru/zadrawch@conference.jabber.ru.log",
		"/D/dev/compiler/test-asm/vs-toasm/test.cpp",
		"/D/dev/compiler/test-asm/src.asm",
		"/D/dev/compiler/test-asm/do.bat",
		"/D/dev/compiler/test-asm/vs-toasm/do.bat",
		"/D/dev/compiler/test-asm/vs-toasm/test.asm",
		"/D/dev/compiler/tests/type-check/021.t",
		"/C/portableApplications/miranda-ng-v0.93.5_x64/Profiles/Satana/Logs/Jabber.ru/g+ch@vox.hangar.tk.log",
		"/D/dev/compiler/src/codegen.cpp",
		"/D/dev/compiler/src/codegen.hpp",
		"/D/dev/compiler/src/Visitor.hpp",
		"/D/dev/compiler/tests/parser/099.t",
		"/D/dev/compiler/tests/type-check/111.t",
		"/C/Users/mapho_000/Downloads/Mathematica"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 95.0,
		"where_history":
		[
			"D:\\cppgm\\dev\\cppgm-dev\\common",
			"D:\\dev\\whiterra\\RSEngine-7553457135d9bb3affb1e0d4e1a366ae91d311af\\build-test\\RSEngine\\src",
			"D:\\dev\\hotlava\\HotSource_wx\\HotEngine\\Common",
			"D:\\dev\\whiterra\\repo\\bin\\res\\json\\Levels",
			"D:\\dev\\_work\\code\\HotCharts\\src",
			"D:\\dev\\hotlava\\HotSource_wx\\HotEngine\\Common",
			"C:\\Users\\mapho_000\\Downloads\\pa1-2\\work\\src",
			"D:\\dev\\whiterra\\repo\\bin\\res\\json",
			"D:\\dev\\hotlava\\HotSource_wx\\HotEngine\\Common",
			"D:\\dev\\hotlava\\HotSource_wx\\HotBox\\Common",
			"D:\\taken-from-work\\core\\ZombieBowling_iPad\\Main\\Src",
			"D:\\taken-from-work\\core\\ZombieBowling_iPad\\Main\\Src\\screens",
			"G:\\app\\Miranda_old\\Profiles\\Logs\\archived",
			"G:\\app\\Miranda\\Profiles\\Satana\\Logs",
			"D:\\dev\\whiterra\\repo",
			"D:\\dev\\whiterra\\rtr-res\\xml\\xml",
			"D:\\dev\\hotlava\\HotSource_wx\\HotStudio\\Common",
			"D:\\dev\\hotlava\\HotSource_wx\\HotEngine\\Common",
			"D:\\dev\\whiterra\\rtr-res\\xml\\xml",
			"D:\\dev\\qt5\\qttools\\src\\designer\\src",
			"D:\\dev\\qt5\\qttools\\src\\designer\\src\\components\\propertyeditor",
			"D:\\dev\\qt5\\qttools\\src\\designer",
			"D:\\dev\\qt5\\qttools\\src\\designer\\src\\lib\\sdk",
			"D:\\dev\\qt5\\qtbase\\include\\QtDesigner",
			"D:\\dev\\qt5\\qtbase\\include\\QtDesigner\\5.0.1\\QtDesigner\\private",
			"D:\\dev\\qt-creator\\src\\plugins\\designer",
			"D:\\dev\\hotlava\\HotSource_wx\\HotEngine\\Common",
			"D:\\dev\\whiterra\\NorthernTale2",
			"D:\\dev\\whiterra\\repo\\",
			"D:\\dev\\whiterra\\repo\\src",
			"D:\\dev\\whiterra\\NorthernTale2\\src\\editor\\MapEditor",
			"D:\\dev\\whiterra\\NorthernTale2\\src\\editor\\MapEditor\\MapEditorView",
			"D:\\dev\\whiterra\\NorthernTale2\\src\\editor\\MapEditor\\MapEditor",
			"D:\\dev\\hotlava\\HotSource_wx",
			"D:\\dev\\hotlava\\",
			"D:\\dev\\hotlava",
			"D:\\dev\\hotlava\\HotSource_wx\\HotEngine",
			"D:\\dev\\hotlava\\HotSource_wx",
			"D:\\dev\\whiterra\\NorthernTale2-mod\\src\\game",
			"D:\\dev\\whiterra\\NorthernTale2-mod\\proj",
			"D:\\dev\\hotlava\\mm4-main-ipad-free",
			"D:\\dev\\hotlava\\7-wonders-v",
			"D:\\dev\\hotlava\\7-wonders-iv",
			"D:\\dev\\hotlava\\7-wonders-iv\\Main_iPad",
			"D:\\dev\\HotSource_wx\\HotEngine",
			"D:\\dev\\_work\\code\\Pickers",
			"D:\\dev\\HotSource_wx\\HotEngine\\Common",
			"D:\\dev\\HotSource_wx\\HotSource",
			"D:\\dev\\HotSource_wx\\",
			"D:\\dev\\HotSource_wx\\HotEngine\\Common",
			"D:\\dev\\qt5"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"url",
			"ws2",
			"link",
			"ole32",
			"ws2_32",
			"libra",
			"-lws2_32",
			"-l",
			"-lws2_32",
			"test",
			"-lws2_32",
			"uri_builder_test",
			"!.*",
			"log/",
			"regex",
			"asio",
			"boost",
			"Visual",
			";",
			"pastie",
			"remain",
			"TimeScoreNum",
			"initializer",
			"вайб",
			"initializer",
			"init-declarator-list",
			"_a",
			"_notMain",
			"Maji.*htt",
			"m9th",
			"IsLValue",
			"IsLva",
			"ставлю",
			"студий",
			"SG39519",
			"test",
			"test.cpp",
			"___security_cookie",
			"main",
			"IsLvalue",
			"tokenType == (.*)",
			";",
			"\\|\\| ",
			"return",
			"tokenType == (.*)",
			"\\|\\|",
			"||",
			"GNU",
			"NIGNU",
			"Size",
			"lvalue",
			"LValue",
			"printf",
			"prtinf",
			"bb",
			"foo",
			"SG3746",
			"$SG3746",
			"FLAT",
			"gc@@3PADA",
			"SG3762",
			"$SG3762",
			"printf",
			"CStatement",
			"CFunction",
			"PrimaryExpression",
			"typedef-name",
			"type-specifier",
			"specifier-q",
			"type-name",
			"type=name",
			"name",
			"type",
			"type-name",
			"type-specifier",
			"specifier-qualifier-list",
			"type-",
			"type-name",
			"cast-exp",
			"type-name",
			"abstract-declarator",
			"specifier-qualifier-list",
			"specifier-qualifier-list abstract-declarator",
			"specifier-qualifier-list {abstract-declarator}",
			"type-name",
			"isys",
			"-Wall",
			"-f",
			"4и ",
			"43",
			"ld",
			"-g",
			"ParseDo",
			"declaration",
			"selection-statement",
			"designation",
			"initializer-list",
			"SALAT",
			"rightmostType",
			"leftmostType",
			"rightmostFirstType",
			"AnonymousTagCounter",
			"expression-statement",
			"declaration",
			"compound-state",
			"SymbolTable",
			"Struct",
			"\\}",
			"\\}\\",
			"\\{",
			"}",
			"specifier-qualifier-list",
			"parameter-list",
			"аватарк",
			"морков",
			"declaration",
			"compound-statement",
			"declare a as function returning pointer to array 2 of int",
			"declare a as array 2 of pointer to function returning int",
			"ParseDeclarator",
			"identifier-list",
			"FilterD",
			"ParseDeclarator",
			"CPointerSymbol",
			"ParsePointer",
			"Const",
			"declarator",
			"init-declarator"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"",
			"\\n",
			"case \\1:",
			"",
			"case \\1:",
			"",
			"`",
			"\\1,",
			"\\1",
			"\\1Visual\"",
			"\\1Visual\",",
			"\"\\1\": \"\\2\",",
			"\"\\u\\1\\2\":",
			",\\n\"\\1\": \"\\2\",",
			"},",
			"{ \"@type\": \"\\1\",",
			"FrameDelay",
			"FramesPerSequence",
			"\"\\u\\1\\2\":",
			",\\n\"\\1\": \"\\2\",",
			"},",
			"{ \"@type\": \"\\1\",",
			"\"\\u\\1\\2\":",
			",\\n\"\\1\": \"\\2\",",
			"},",
			"{ \"@type\": \"\\1\",",
			"FramesPerSequence",
			"",
			"FrameDelay",
			"\"\\u\\1\\2\":",
			",\\n\"\\1\": \"\\2\",",
			"},",
			"{ \"@type\": \"\\1\",",
			"\"\\u\\1\\2\":",
			",\\n\"\\1\": \"\\2\",",
			"},",
			"{ \"@type\": \"\\1\",",
			"FrameDelay",
			"FramesPerSequence",
			"},",
			"\"\\u\\1\\2\":",
			",\\n\"\\1\": \"\\2\",",
			"},",
			"{ \"@type\": \"\\1\",",
			"}",
			"\"\\u\\1\\2\":",
			",\\n\"\\1\": \"\\2\",",
			"},",
			"{ \"@type\": \"\\1\",",
			"",
			"\nindentation",
			"\\1\nindentation",
			"\nindentation",
			"// nice support of n-spaces  I'm going to stick with spaces for all\nindentation",
			"",
			"\"\\u\\1\\2\":",
			",\\n\"\\1\": \"\\2\",",
			"},",
			"{ \"@type\": \"\\1\",",
			"\"\\u\\1\\2\":",
			"},",
			",\\n\"\\1\": \"\\2\",",
			",\"\\1\": \"\\2\",",
			"\"\\1\": \"\\2\",",
			"},",
			"{ \"@type\": \"\\1\",",
			"\"\\1\": \"\\2\",\\n",
			"\"\\1\": \"\\2\",",
			"\\",
			"",
			"../src/",
			"",
			"../src/",
			"\\\\",
			"\\t\\t\\\\",
			"\\t\\\\"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 10,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/D/dev/ncc/include/expressions.h",
					"settings":
					{
						"buffer_size": 7996,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"encoding_helper_confidence": 1.0,
							"encoding_helper_encoding": "UTF-8",
							"encoding_helper_encoding_sublime": "UTF-8",
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"settings":
					{
						"buffer_size": 1026,
						"regions":
						{
						},
						"selection":
						[
							[
								1026,
								1026
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "Type-correctness-stuff.txt",
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"encoding_helper_encoding_sublime": "UTF-8",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/D/dev/ncc/include/codegen.h",
					"settings":
					{
						"buffer_size": 7860,
						"regions":
						{
						},
						"selection":
						[
							[
								7347,
								7347
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"encoding_helper_confidence": 1.0,
							"encoding_helper_encoding": "UTF-8",
							"encoding_helper_encoding_sublime": "UTF-8",
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 277.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/D/dev/ncc/src/expressions.cpp",
					"settings":
					{
						"buffer_size": 27436,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"encoding_helper_confidence": 1.0,
							"encoding_helper_encoding": "UTF-8",
							"encoding_helper_encoding_sublime": "UTF-8",
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "sandbox/vs-toasm/test.cpp",
					"settings":
					{
						"buffer_size": 4821,
						"regions":
						{
						},
						"selection":
						[
							[
								4821,
								4821
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"encoding_helper_confidence": 1.0,
							"encoding_helper_encoding": "UTF-8",
							"encoding_helper_encoding_sublime": "UTF-8",
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 5801.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "sandbox/vs-toasm/test.asm",
					"settings":
					{
						"buffer_size": 324,
						"regions":
						{
						},
						"selection":
						[
							[
								258,
								258
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"encoding_helper_confidence": 1.0,
							"encoding_helper_encoding": "UTF-8",
							"encoding_helper_encoding_sublime": "UTF-8",
							"syntax": "Packages/FASM x86/Syntaxes/Assembly x86 Intel.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/D/dev/ncc/src/codegen.cpp",
					"settings":
					{
						"buffer_size": 36250,
						"regions":
						{
						},
						"selection":
						[
							[
								666,
								666
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"encoding_helper_confidence": 1.0,
							"encoding_helper_encoding": "UTF-8",
							"encoding_helper_encoding_sublime": "UTF-8",
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "/C/Program Files (x86)/Microsoft Visual Studio 12.0/VC/include/listing.inc",
					"settings":
					{
						"buffer_size": 2330,
						"regions":
						{
						},
						"selection":
						[
							[
								653,
								653
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"encoding_helper_confidence": 1.0,
							"encoding_helper_encoding": "UTF-8",
							"encoding_helper_encoding_sublime": "UTF-8",
							"syntax": "Packages/FASM x86/Syntaxes/Assembly x86 Intel.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 228.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 8,
					"settings":
					{
						"buffer_size": 658,
						"regions":
						{
						},
						"selection":
						[
							[
								658,
								658
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "8[23:10:56] K-1: http://www.youtube.com/watch?v=28",
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"encoding_helper_encoding_sublime": "UTF-8",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "/C/Users/mapho_000/Downloads/gistf79acdd746cd8efc21bc-53b83f8a06e0fbf3d7c0580c404595dd890b0742/asdf.txt",
					"settings":
					{
						"buffer_size": 1966,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "таски под номерами:",
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"encoding_helper_confidence": 0.99,
							"encoding_helper_encoding": "UTF-8",
							"encoding_helper_encoding_sublime": "UTF-8",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "/D/dev/whiterra/repo/doc/tasks.todo",
					"settings":
					{
						"buffer_size": 13357,
						"regions":
						{
						},
						"selection":
						[
							[
								901,
								901
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"encoding_helper_confidence": 0.99,
							"encoding_helper_encoding": "UTF-8",
							"encoding_helper_encoding_sublime": "UTF-8",
							"syntax": "Packages/PlainTasks/PlainTasks.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "doc/unrelated-docs-and-lectures/codegen1.txt",
					"settings":
					{
						"buffer_size": 3085,
						"regions":
						{
						},
						"selection":
						[
							[
								620,
								685
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"encoding_helper_confidence": 0.99,
							"encoding_helper_encoding": "UTF-8",
							"encoding_helper_encoding_sublime": "UTF-8",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "doc/unrelated-docs-and-lectures/codegen2.txt",
					"settings":
					{
						"buffer_size": 1372,
						"regions":
						{
						},
						"selection":
						[
							[
								308,
								308
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"encoding_helper_confidence": 0.99,
							"encoding_helper_encoding": "UTF-8",
							"encoding_helper_encoding_sublime": "UTF-8",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 36.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "doc/grammar.txt",
					"settings":
					{
						"buffer_size": 8759,
						"regions":
						{
						},
						"selection":
						[
							[
								3983,
								3994
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"encoding_helper_confidence": 0.938125,
							"encoding_helper_encoding": "UTF-8",
							"encoding_helper_encoding_sublime": "UTF-8",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2148.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 38.0
	},
	"input":
	{
		"height": 45.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": false,
	"output.clang":
	{
		"height": 130.0
	},
	"output.exec":
	{
		"height": 132.0
	},
	"output.hex_viewer_inspector":
	{
		"height": 184.0
	},
	"replace":
	{
		"height": 68.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"do.bat",
				"sandbox/vs-toasm/do.bat"
			],
			[
				"99.t",
				"tests/parser/099.t"
			],
			[
				"test47.t",
				"tests/parser/047.t"
			],
			[
				"test47",
				"tests/parser/047.ref"
			],
			[
				"grammar",
				"doc/grammar"
			],
			[
				"gramm",
				"doc/grammar"
			],
			[
				"tests/parser/000",
				"tests/parser/000.t"
			],
			[
				".cpp",
				"src/main.cpp"
			],
			[
				"t000.t",
				"tests/parser/000.t"
			],
			[
				"t001.t",
				"tests/parser/001.t"
			],
			[
				"reso.json",
				"bin/res/json/resources.json"
			],
			[
				"templates.json",
				"bin/res/json/Levels/templates.json"
			],
			[
				"res",
				"bin/res/json/resources.json"
			],
			[
				"caustcpp",
				"src/fx_cCaustic.cpp"
			],
			[
				"resour",
				"bin/res/json/resources.json"
			],
			[
				"causth",
				"src/fx_cCaustic.h"
			],
			[
				"mapcobh",
				"src/map_cObject.h"
			],
			[
				"mapcobj",
				"src/map_cObject.cpp"
			],
			[
				"caus",
				"src/fx_cCaustic.cpp"
			],
			[
				"cgamefac.h",
				"src/game_cgamefacade.h"
			],
			[
				"todo",
				"doc/tasks.todo"
			],
			[
				"reso",
				"bin/res/json/resources.json"
			],
			[
				"resources.json",
				"bin/res/json/resources.json"
			],
			[
				"resjson",
				"bin/res/json/resources.json"
			],
			[
				"thou",
				"doc/thoughts.txt"
			],
			[
				"qlog",
				"build/build/qlog.log"
			],
			[
				"fx_pyro",
				"src/fx_PyroEffects.cpp"
			],
			[
				"gtimer",
				"3rd/engine/inc/gtimer.h"
			],
			[
				"doc/th",
				"doc/thoughts.txt"
			],
			[
				"core_wndutils",
				"src/core_wndUtils.h"
			],
			[
				"cmenuf",
				"src/menu_cMenuFacade.h"
			],
			[
				"cmenuefaca",
				"src/menu_cMenuFacade.cpp"
			],
			[
				"gutil.h",
				"3rd/engine/inc/gutil.h"
			],
			[
				"kindlemainjava",
				"HotSource_wx/HotSource_android_mk/proj_mm4_kindle_free/src/com/mumbojumbo/hotbox/Main.java"
			],
			[
				"mmmain.java",
				"HotSource_wx/HotSource_android_mk/proj_mm2/src/com/mumbojumbo/hotbox/Main.java"
			],
			[
				"amazon",
				"HotSource_wx/HotEngine/Platforms/Android/AmazonStore.cpp"
			],
			[
				"androidmk.mk",
				"HotSource_wx/HotSource_android_mk/jni/Shared.mk"
			],
			[
				"views",
				"hellboard/views.py"
			],
			[
				"views.py",
				"hellboard/views.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
		],
		"width": 380.0
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 173.0,
	"status_bar_visible": true
}
