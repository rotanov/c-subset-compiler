{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"design",
				"designator-list"
			],
			[
				"initi",
				"initializer"
			],
			[
				"init-lis",
				"initializer-list"
			],
			[
				"typed",
				"typedef-name"
			],
			[
				"spec",
				"specifier-qualifier-list"
			],
			[
				"exc",
				"exclusive-OR-expression"
			],
			[
				"unar",
				"unary-operator"
			],
			[
				"floa",
				"floating-literal"
			],
			[
				"for",
				"fori	for i,v in ipairs()"
			],
			[
				"Spr",
				"SpriteId"
			],
			[
				"s",
				"sym	Uint16"
			],
			[
				"min",
				"min"
			],
			[
				"b",
				"beginend	$1.begin(), $1.end()"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "//Grammar\n\n//    Notation\n\n//  In the syntax notation used in this clause, syntactic categories (nonterminals)\n// are indicated by words, separated by `-` symbol. Literal words and character\n// set members (terminals) are indicated by enclosing in grave accent (`).\n//  A colon (:) following a nonterminal introduces its definition. Alternative\n// definitions are listed on separate lines, except when prefaced by\n// the words ‘‘one of’’. An optional symbol is indicated by enclosing in curly\n// braces ({}) e.g. {expression} indicates an optional expression non terminal.\n// `//` anywhere denotes beginning of a comment til the end of the line.\n\n//    Expressions\n\n// 6.5.1.1 Generic selection excluded\nprimary-expression:\n    identifier\n    literal\n    string-literal\n    `(` expression `)`\n\n// 6.5.2.5 Compound literals - excluded\npostfix-expression:\n    primary-expression\n    postfix-expression `[` expression `]`\n    postfix-expression `(` {argument-expression-list} `)`\n    postfix-expression `.` identifier\n    postfix-expression `->` identifier\n    postfix-expression `++`\n    postfix-expression `--`\n\nunary-expression:\n    postfix-expression\n    `++` unary-expression\n    `--` unary-expression\n    unary-operator cast-expression\n    `sizeof` unary-expression\n    `sizeof` `(` type-name `)`\n\nunary-operator: one of\n    `&` `*` `+` `-` `~` `!`\n\ncast-expression:\n    unary-expression\n    `(` type-name `)` cast-expression\n\nmultiplicative-expression:\n    cast-expression\n    multiplicative-expression `*` cast-expression\n    multiplicative-expression `/` cast-expression\n    multiplicative-expression `%` cast-expression\n\nadditive-expression:\n    multiplicative-expression\n    additive-expression `+` multiplicative-expression\n    additive-expression `-` multiplicative-expression\n\nshift-expression:\n    additive-expression\n    shift-expression `<<` additive-expression\n    shift-expression `>>` additive-expression\n\nrelational-expression:\n    shift-expression\n    relational-expression `<` shift-expression\n    relational-expression `>` shift-expression\n    relational-expression `<=` shift-expression\n    relational-expression `>=` shift-expression\n\nequality-expression:\n    relational-expression\n    equality-expression `==` relational-expression\n    equality-expression `!=` relational-expression\n\nAND-expression:\n    equality-expression\n    AND-expression `&` equality-expression\n\nexclusive-OR-expression:\n    AND-expression\n    exclusive-OR-expression `^` AND-expression\n\ninclusive-OR-expression:\n    exclusive-OR-expression\n    inclusive-OR-expression `|` exclusive-OR-expression\n\nlogical-AND-expression:\n    inclusive-OR-expression\n    logical-AND-expression `&&` inclusive-OR-expression\n\nlogical-OR-expression:\n    logical-AND-expression\n    logical-OR-expression `||` logical-AND-expression\n\n// right associative\n// PHP HAS LEFT ASSOCIATIVE CONDITIONAL OPERATOR (unable to hold it)\nconditional-expression:\n    logical-OR-expression\n    logical-OR-expression `?` expression `:` conditional-expression\n\nassignment-expression:\n    conditional-expression\n    unary-expression assignment-operator assignment-expression\n\nassignment-operator: one of\n    `=` `*=` `/=` `%=` `+=` `-=` `<<=` `>>=` `&=` `^=` `|=`\n\nexpression:\n    assignment-expression\n    expression `,` assignment-expression\n\nargument-expression-list:\n    assignment-expression\n    argument-expression-list `,` assignment-expression    \n\nconstant-expression:\n    conditional-expression\n\n//    Declarations\n\n// 6.7.10 Static assertions - excluded\ndeclaration:\n    declaration-specifiers {init-declarator-list} `;`\n\n// 6.7.4 Function specifiers - excluded (inline, _Noreturn)\n// 6.7.5 Alignment specifier - excluded (_Alignas)\ndeclaration-specifiers:\n    `typedef` {declaration-specifiers}\n    type-specifier {declaration-specifiers}\n    `const` {declaration-specifiers}\n\ninit-declarator-list:\n    init-declarator\n    init-declarator-list `,` init-declarator\n\ninit-declarator:\n    declarator\n    declarator `=` initializer\n\n// `extern` `static` `_Thread_local` `auto` `register` - excluded, see 6.7.1\n// since it is `typedef` only I shall use plainly `typedef` in place of storage-class-specifier\nstorage-class-specifier:\n    `typedef`\n\n    Type specifiers\n\n// `short` `long` `double` `signed` `unsigned` `_Bool` `_Complex` - excluded, see 6.7.2\n// 6.7.2.4 Atomic type specifiers - excluded\n// struct-or-union-specifier replaced with struct-specifier, unions excluded\n// enum-specifier - excluded\ntype-specifier:\n    `void`\n    `char`\n    `int`\n    `float`\n    struct-specifier\n    typedef-name\n\n//    Structure and union specifiers\n\n// struct-or-union replaced with simply `struct` terminal\nstruct-specifier:\n    `struct` {identifier} `{` struct-declaration-list `}`\n    `struct` identifier\n\nstruct-declaration-list:\n    struct-declaration\n    struct-declaration-list struct-declaration\n\nstruct-declaration:\n    specifier-qualifier-list {struct-declarator-list} `;`\n\nspecifier-qualifier-list:\n    type-specifier {specifier-qualifier-list}\n    `const` {specifier-qualifier-list}\n\n// {declarator} `:` constant-expression (Bit fields) - excluded\n// that way struct-declarator became simply declarator\nstruct-declarator-list:\n    declarator\n    struct-declarator-list `,` declarator\n\n//    Type qualifiers\n\n// `restrict` `volatile` `_Atomic` - excluded\n// and since type-qualifier can only be `const` it will be replaced with `const`\n// in latter appearances\n// and regarding that fact type-qualifier-list also becomes useless\n// so `const` will be used instead\ntype-qualifier:\n    `const`\n\n//    Declarators\n\ndeclarator:\n    {pointer} direct-declarator\n\n// `static` keyword appearance within `[` `]` excluded See 6.7.6.3 and\n// http://hamberg.no/erlend/posts/2013-02-18-static-array-indices.html\n// for details\n// `const` keyword appearance within `[` `]` is also excluded as well as `*`\n// direct-declarator `(` {identifier-list} `)` excluded\ndirect-declarator:\n    identifier\n    `(` declarator `)`\n    direct-declarator `[` {assignment-expression} `]`\n    direct-declarator `(` parameter-list `)`    \n\npointer:\n    `*` {`const`}\n    `*` {`const`} pointer\n\n// all occurences of parameter-type-list are replaced with parameter-list\n// due to exclusion of `...` punctuation\nparameter-list:\n    parameter-declaration\n    parameter-list `,` parameter-declaration\n\nparameter-declaration:\n        declaration-specifiers declarator\n        declaration-specifiers {abstract-declarator}\n\nidentifier-list:\n    identifier\n    identifier-list `,` identifier\n\n\n//    Type Names\n\ntype-name:\n    specifier-qualifier-list {abstract-declarator}\n\nabstract-declarator:\n    pointer\n    {pointer} direct-abstract-declarator\n\n// Yet again, as in direct-declarator: all stuff within square brackets\n// except {assignment-expression} is excluded\ndirect-abstract-declarator:\n    `(` abstract-declarator `)`\n    {direct-abstract-declarator} `[` {assignment-expression} `]`\n    {direct-abstract-declarator} `(` {parameter-list} `)`\n\n//    Type definitions\n\ntypedef-name:\n    identifier\n\n    \n//    Initialization\n\ninitializer:\n    assignment-expression\n    `{` initializer-list `}`\n    `{` initializer-list `,` `}`\n\ninitializer-list:\n    {designation} initializer\n    initializer-list `,` {designation} initializer\n\ndesignation:\n    designator-list `=`\n\ndesignator-list:\n    designator\n    designator-list designator\n\ndesignator:\n    `[` constant-expression `]`\n    `.` identifier\n\n    Statements and Blocks\n\nstatement:\n    compound-statement\n    expression-statement\n    selection-statement\n    iteration-statement\n    jump-statement\n\n//    Compound statement\n\ncompound-statement:\n    `{` {block-item-list} `}`\n\nblock-item-list:\n    block-item\n    block-item-list block-item\n\nblock-item:\n    declaration\n    statement\n\n//    Expression and null statements\n\nexpression-statement:\n    {expression} `;`\n\n//    Selection statements\n\nselection-statement:\n    `if` `(` expression `)` statement\n    `if` `(` expression `)` statement `else` statement\n\niteration-statement:\n    `while` `(` expression `)` statement\n    `do` statement `while` `(` expression `)` `;`\n    `for` `(` {expression} `;` {expression} `;` {expression} `)` statement\n    `for` `(` declaration {expression} `;` {expression} `)` statement\n\njump-statement:\n    `continue` `;`\n    `break` `;`\n    `return` {expression} `;`\n\n//    External definitions\n\ntranslation-unit:\n    external-declaration\n    translation-unit external-declaration\n\nexternal-declaration:\n    function-definition\n    declaration\n\n//    Function definition\n\n// {declaration-list} after declarator excluded as old style see 6.9.1\nfunction-definition:\n    declaration-specifiers declarator compound-statement\n\n// declaration-list:\n//    declaration\n//    declaration-list declaration\n\n",
			"file": "doc/grammar.txt",
			"file_size": 9103,
			"file_write_time": 130309183739747804,
			"settings":
			{
				"buffer_size": 8759,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Windows"
			}
		},
		{
			"file": "tests/parser/099.t",
			"settings":
			{
				"buffer_size": 73,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/D/dev/whiterra/repo/game/game.pro",
			"settings":
			{
				"buffer_size": 22440,
				"line_ending": "Windows"
			}
		},
		{
			"file": "test-driver/Makefile.Release",
			"settings":
			{
				"buffer_size": 242417,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 86.0,
		"selected_items":
		[
			[
				"list pac",
				"Package Control: List Packages"
			],
			[
				"inst pack",
				"Package Control: Install Package"
			],
			[
				"instpack",
				"Package Control: Install Package"
			],
			[
				"package control ",
				"Package Control: Discover Packages"
			],
			[
				"pack con ",
				"Package Control: List Packages"
			],
			[
				"C++",
				"Set Syntax: C++"
			],
			[
				"lua",
				"Set Syntax: Lua"
			],
			[
				"upgrapack",
				"Package Control: Upgrade Package"
			],
			[
				"upgapa",
				"Package Control: Upgrade Package"
			],
			[
				"uppack",
				"Package Control: Upgrade Package"
			],
			[
				"packli",
				"Package Control: List Packages"
			],
			[
				"lower",
				"Convert Case: Lower Case"
			],
			[
				"INSTPA",
				"Package Control: Install Package"
			],
			[
				"hex lit",
				"Hex Viewer: Toggle Endianness (Big|Little)"
			],
			[
				"inst packa",
				"Package Control: Install Package"
			],
			[
				"diff",
				"FileDiffs: Menu"
			],
			[
				"instpa",
				"Package Control: Install Package"
			],
			[
				"hex",
				"Hex Viewer: Toggle Hex View"
			],
			[
				"set synt HT",
				"Set Syntax: HTML (Tcl)"
			],
			[
				"instpac",
				"Package Control: Install Package"
			],
			[
				"json",
				"Pretty JSON: Reformat (Pretty Print) JSON"
			],
			[
				"batch",
				"Set Syntax: Batch File"
			],
			[
				"lua dev",
				"Set Syntax: Lua Dev"
			],
			[
				"lua d",
				"Set Syntax: Lua Dev"
			],
			[
				"syn bat",
				"Set Syntax: Batch File"
			],
			[
				"synjson",
				"Set Syntax: JSON"
			],
			[
				"syn jso",
				"Set Syntax: JSON"
			],
			[
				"syn json",
				"Set Syntax: SJSON"
			],
			[
				"syn j",
				"Set Syntax: JSON"
			],
			[
				"Package Control: ",
				"Package Control: Upgrade Package"
			],
			[
				"inspack",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"tasks",
				"Tasks: Cancel"
			],
			[
				"Tasks",
				"Tasks: Archive"
			],
			[
				"c++",
				"Set Syntax: C++"
			],
			[
				"unf",
				"Code Folding: Unfold All"
			],
			[
				"ww",
				"Word Wrap: Toggle"
			],
			[
				"add fol",
				"Project: Add Folder"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"ipacka",
				"Package Control: Install Package"
			],
			[
				"pack insta",
				"Package Control: Install Package"
			],
			[
				"color",
				"Color picker"
			],
			[
				"install package",
				"Package Control: Install Package"
			],
			[
				"INSTAL",
				"Package Control: Install Package"
			],
			[
				"packin",
				"Package Control: Install Package"
			],
			[
				"css",
				"Set Syntax: CSS"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"sjson",
				"Set Syntax: SJSON"
			],
			[
				"installP",
				"Package Control: Install Package"
			],
			[
				"scala",
				"Set Syntax: Scala"
			],
			[
				"s bat",
				"Set Syntax: Batch File"
			],
			[
				"synta bat",
				"Set Syntax: Batch File"
			],
			[
				"plain",
				"Set Syntax: Plain Text"
			],
			[
				"toglmenu",
				"View: Toggle Menu"
			],
			[
				"to",
				"View: Toggle Menu"
			],
			[
				"togglemen",
				"View: Toggle Menu"
			],
			[
				"xml",
				"Set Syntax: XML"
			],
			[
				"upper",
				"Convert Case: Upper Case"
			],
			[
				"open",
				"View: Toggle Open Files in Side Bar"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"jso",
				"Set Syntax: JSON"
			],
			[
				"C+",
				"Set Syntax: C++"
			],
			[
				"markdown",
				"Markdown Preview: preview in Browser"
			],
			[
				"markdow",
				"Markdown Preview: preview in Sublime Text"
			],
			[
				"mark",
				"Markdown Preview: preview in Browser"
			],
			[
				"toggle",
				"View: Toggle Menu"
			],
			[
				"Preview in bro",
				"Markdown Preview: preview in Browser"
			],
			[
				"mark pre bro",
				"Markdown Preview: preview in Browser"
			],
			[
				"bro",
				"Markdown Preview: preview in Browser"
			],
			[
				"brower",
				"Markdown Preview: preview in Browser"
			],
			[
				"cheatsh",
				"Markdown Preview: open Markdown Cheat sheet"
			],
			[
				"mabr",
				"Markdown Preview: preview in Browser"
			],
			[
				"Markdow",
				"Markdown Preview: preview in Browser"
			],
			[
				"toggle men",
				"View: Toggle Menu"
			],
			[
				"package Con Dis",
				"Package Control: Disable Package"
			],
			[
				"install pac",
				"Package Control: Install Package"
			],
			[
				"txt",
				"Set Syntax: Plain Text"
			],
			[
				"log",
				"Set Syntax: LaTeX Log"
			],
			[
				"pa",
				"Package Control: Remove Package"
			],
			[
				"makef",
				"Set Syntax: Makefile"
			],
			[
				"jq",
				"Set Syntax: jQuery (JavaScript)"
			],
			[
				"install package ",
				"Package Control: Install Package"
			],
			[
				"installPackage ",
				"Package Control: Install Package"
			],
			[
				"installpa",
				"Package Control: Install Package"
			],
			[
				"install pack",
				"Package Control: Install Package"
			],
			[
				"installPa",
				"Package Control: Install Package"
			],
			[
				"mako",
				"Set Syntax: HTML (Mako)"
			],
			[
				"brack",
				"Bracket Highlighter: Match Brackets"
			],
			[
				"html",
				"HTML: Encode Special Characters"
			],
			[
				"emmet",
				"Emmet: Expand Abbreviation"
			],
			[
				"Pack ins",
				"Package Control: Install Package"
			],
			[
				"user",
				"Preferences: Settings - User"
			],
			[
				"mak",
				"Markdown Preview: preview in Browser"
			],
			[
				"clang",
				"Preferences: SublimeClang Settings – Default"
			],
			[
				"sublim",
				"Preferences: SublimeClang Settings – User"
			],
			[
				"pack up",
				"Package Control: Upgrade Package"
			],
			[
				"mard",
				"Markdown Preview: preview in Browser"
			],
			[
				"asm",
				"Set Syntax: Assembly x86 Intel (FASM)"
			],
			[
				"package insta",
				"Package Control: Install Package"
			],
			[
				"markdo",
				"Markdown Preview: preview in Browser"
			],
			[
				"markd",
				"Markdown Preview: preview in Browser"
			],
			[
				"makio",
				"Markdown Preview: preview in Browser"
			],
			[
				"package ins",
				"Package Control: Install Package"
			],
			[
				"pack in",
				"Package Control: Install Package"
			],
			[
				"sy C++",
				"Set Syntax: C++"
			]
		],
		"width": 450.0
	},
	"console":
	{
		"height": 160.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/D/dev/compiler/test-driver/object_script.test-driver-release.Release",
		"/D/dev/compiler/bin/flag.txt",
		"/D/dev/compiler/test-driver/Makefile.Debug",
		"/D/dev/compiler/tests/parser/047.t",
		"/D/dev/compiler/tests/parser/047.ref",
		"/D/dev/compiler/doc/unrelated-docs-and-lectures/compilers-lecture.txt",
		"/D/dev/compiler/src/prettyPrinting.cpp",
		"/D/dev/ncc/src/parser.cpp",
		"/D/dev/compiler/doc/grammar",
		"/D/dev/compiler/src/Parser.cpp",
		"/D/dev/ncc/tests/parser-declarations/24-local-anonymous-struct.c",
		"/D/dev/ncc/tests/parser-declarations/11-global-vars-of-struct-type.c",
		"/D/dev/ncc/tests/parser-declarations/10-nested-global-structs.c",
		"/D/dev/ncc/tests/parser-declarations/09-multiple-global-structs.c",
		"/D/dev/ncc/tests/parser-declarations/08-global-tagged-struct.c",
		"/D/dev/ncc/tests/parser-declarations/07-global-anonymous-struct.c",
		"/D/dev/ncc/tests/parser-declarations/06-nested-global-typedefs.c",
		"/D/dev/ncc/tests/parser-declarations/05-multiple-global-typedefs.c",
		"/D/dev/ncc/tests/parser-declarations/04-single-global-typedef.c",
		"/D/dev/ncc/tests/parser-declarations/03-multiple-global-vars-of-internal-types.c",
		"/D/dev/ncc/tests/parser-declarations/02-single-global-var-of-internal-type.c",
		"/D/dev/ncc/tests/parser-declarations/01-empty.c",
		"/C/portableApplications/miranda-ng-v0.93.5_x64/Profiles/Satana/Logs/Jabber.ru/zadrawch@conference.jabber.ru.log",
		"/C/portableApplications/Sublime/Data/Packages/User/Preferences.sublime-settings",
		"/D/dev/ncc/include/parser.h",
		"/D/dev/ncc/src/symbols.cpp",
		"/D/dev/ncc/include/expressions.h",
		"/D/dev/ncc/include/symbols.h",
		"/D/dev/compiler/tests/parser/040.t",
		"/D/dev/compiler/tests/temp/081.t",
		"/D/dev/compiler/tests/temp/080.t",
		"/D/dev/compiler/tests/temp/079.t",
		"/D/dev/compiler/tests/temp/078.t",
		"/D/dev/compiler/tests/temp/077.t",
		"/D/dev/compiler/tests/temp/076.t",
		"/D/dev/compiler/tests/temp/075.t",
		"/D/dev/compiler/doc/declarations-test-draft",
		"/D/dev/compiler/src/main.cpp",
		"/D/dev/compiler/doc/lexical-grammar.txt",
		"/D/dev/compiler/doc/tasks2.txt",
		"/D/dev/compiler/doc/next-week-task.txt",
		"/D/dev/compiler/doc/LL(k).txt",
		"/D/dev/whiterra/repo/3rd/deku2d/2de_TypeInfo.h",
		"/D/dev/whiterra/repo/3rd/deku2d/2de_TypeInfo.cpp",
		"/D/dev/compiler/tests/parser/000.t",
		"/D/dev/compiler/doc/Лекция. Курс компиляторов.",
		"/D/dev/compiler/doc/Кэширование",
		"/C/portableApplications/miranda-ng-v0.93.5_x64/Profiles/Satana/Logs/Jabber.ru/shinkai_project@conference.jabber.ru.log",
		"/C/Users/mapho_000/Downloads/cdecl-blocks-2.5.tar/cdecl-blocks-2.5/cdecl-blocks-2.5/cdgram.y",
		"/C/Users/mapho_000/Downloads/cdecl-blocks-2.5.tar/cdecl-blocks-2.5/cdecl-blocks-2.5/README",
		"/C/Users/mapho_000/Downloads/cdecl-blocks-2.5.tar/cdecl-blocks-2.5/cdecl-blocks-2.5/cdecl.c",
		"/C/portableApplications/miranda-ng-v0.93.5_x64/Profiles/Satana/Logs/IRCHighway/#iichantra - IRCHighway.log",
		"/D/dev/whiterra/repo/bin/res/json/resources.json",
		"/C/Users/mapho_000/AppData/Local/Temp/Md5.c",
		"/C/Users/mapho_000/Desktop/aaaaa/game-crash-2013-10-28-13-42-00-907.txt",
		"/D/dev/ncc/include/statements.h",
		"/D/dev/ncc/include/common.h",
		"/D/dev/ncc/include/codegen.h",
		"/D/dev/ncc/include/cli.h",
		"/C/Users/mapho_000/Desktop/error.log",
		"/C/Users/mapho_000/AppData/Local/Temp/asm_test.txt",
		"/H/doc/University/asm_test.txt",
		"/D/dev/compiler/tests/parser/001.t",
		"/D/dev/whiterra/repo/game/src/Grid.cpp",
		"/D/dev/compiler/src/Parser.hpp",
		"/D/dev/compiler/src/utils.cpp",
		"/D/dev/compiler/src/constants.hpp",
		"/C/dev/boost_1_54_0/libs/context/src/asm/jump_i386_ms_pe_masm.asm",
		"/C/dev/boost_1_54_0/libs/context/src/asm/make_i386_ms_pe_masm.asm",
		"/D/dev/compiler/tests/expression-parser/046.t",
		"/D/dev/compiler/tests/expression-parser/000.t",
		"/D/dev/boost_1_54_0/boost/coroutine/v1/detail/coroutine_op.hpp",
		"/D/dev/compiler/test-driver/Makefile",
		"/C/Users/mapho_000/Desktop/библграфпоиск.txt",
		"/H/dev/epicfail/src/to_draw_list.txt",
		"/D/dev/compiler/tests/expression-parser/001.t",
		"/D/dev/compiler/doc/simple-expression-grammar",
		"/D/dev/compiler/doc/integral-types",
		"/D/dev/compiler/tests/simple-expression-parser/000.t",
		"/H/dev/epicfail/src/zadrawch@conference.jabber.ru-Log.txt",
		"/H/dev/epicfail/doc/todo.txt",
		"/D/dev/compiler/tests/tokenizer/032.ref",
		"/D/dev/cppgm/dev/cppgm-starter-kits/pa2/tests/450-string-literal-concat.ref",
		"/D/dev/cppgm/dev/cppgm-starter-kits/pa2/tests/300-integer-limits.t",
		"/D/dev/cppgm/dev/cppgm-starter-kits/pa2/tests/300-hex-limits.t",
		"/D/dev/cppgm/dev/cppgm-starter-kits/pa2/tests/300-floating-suffix.t",
		"/D/dev/cppgm/dev/cppgm-starter-kits/pa2/tests/250-ud-strchar.t",
		"/D/dev/cppgm/dev/cppgm-starter-kits/pa2/tests/250-string-literal.t",
		"/D/dev/cppgm/dev/cppgm-starter-kits/pa2/tests/200-octal-limits.t",
		"/D/dev/cppgm/dev/cppgm-starter-kits/pa2/tests/200-character-literal.t",
		"/D/dev/cppgm/dev/cppgm-starter-kits/pa2/tests/200-basic-integer-suffix.t",
		"/D/dev/cppgm/dev/cppgm-starter-kits/pa2/tests/200-basic-floating.t",
		"/D/dev/cppgm/dev/cppgm-starter-kits/pa2/tests/100-simple.t",
		"/D/dev/cppgm/dev/cppgm-starter-kits/pa2/tests/100-integer-zero.t",
		"/D/dev/cppgm/dev/cppgm-starter-kits/pa2/tests/100-integer-zero.ref",
		"/D/dev/cppgm/dev/cppgm-starter-kits/pa2/tests/450-string-literal-concat.t",
		"/D/dev/cppgm/dev/cppgm-starter-kits/pa2/tests/500-plus-ud-suffix.t",
		"/D/dev/cppgm/dev/cppgm-starter-kits/pa2/tests/500-plus-ud-suffix.ref",
		"/D/dev/cppgm/dev/cppgm-starter-kits/pa2/tests/700-hard-string-concat.t",
		"/D/dev/cppgm/dev/cppgm-starter-kits/pa1/tests/200-charname-allowed.t",
		"/D/dev/cppgm/dev/cppgm-starter-kits/pa1/tests/200-charname-allowed.ref",
		"/D/dev/cppgm/dev/cppgm-starter-kits/pa1/tests/100-utf8.ref",
		"/D/dev/cppgm/dev/cppgm-starter-kits/pa1/tests/100-utf8.t",
		"/D/dev/cppgm/dev/cppgm-starter-kits/pa1/tests/100-raw-string-literal.t",
		"/D/dev/compiler/doc/tasks.todo",
		"/D/dev/compiler/doc/tree-output-design.txt",
		"/D/dev/compiler/doc/test-driver.txt",
		"/D/dev/compiler/doc/se-important-cases.txt",
		"/D/dev/compiler/scripts/run_scanner_tests.bat",
		"/C/Users/mapho_000/Downloads/qq31-parenthesis/qq31-parenthesis/highlighter.cpp",
		"/C/Users/mapho_000/Downloads/qq31-parenthesis/qq31-parenthesis/textedit.cpp",
		"/C/Users/mapho_000/Downloads/qq31-parenthesis/qq31-parenthesis/textedit.h",
		"/C/portableApplications/miranda-ng-v0.93.5_x64/Profiles/Satana/Logs/Jabber.ru/redrawch@conference.jabber.ru.log",
		"/D/dev/whiterra/repo/rtr-ng.sublime-project",
		"/D/dev/whiterra/repo/rtr-ng.sublime-workspace",
		"/H/dev/#Finished/Calculator/src/MathParser.pas",
		"//Emily/dev/compiler/src/ITokenStream.hpp",
		"//Emily/dev/compiler/src/Constants.hpp",
		"//Emily/dev/compiler/src/pretokenizer.hpp",
		"//Emily/dev/compiler/doc/tasks.todo",
		"//Emily/dev/compiler/doc/lexical-grammar.txt",
		"/C/portableApplications/miranda-ng-v0.93.5_x64/Profiles/Satana/Logs/Freenode/#qt - FreeNode.log",
		"/C/Users/mapho_000/Desktop/し.txt",
		"/D/dev/whiterra/repo/bin/error.log",
		"/C/Users/mapho_000/Desktop/json/json/resources.json",
		"/D/dev/whiterra/repo/bin/res/json/_resources.json",
		"/D/dev/whiterra/repo/editor/deploy-step.bat",
		"/D/dev/whiterra/repo/game/deploy-step.bat"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
			"D:\\cppgm\\dev\\cppgm-dev\\common",
			"D:\\dev\\whiterra\\RSEngine-7553457135d9bb3affb1e0d4e1a366ae91d311af\\build-test\\RSEngine\\src",
			"D:\\dev\\hotlava\\HotSource_wx\\HotEngine\\Common",
			"D:\\dev\\whiterra\\repo\\bin\\res\\json\\Levels",
			"D:\\dev\\_work\\code\\HotCharts\\src",
			"D:\\dev\\hotlava\\HotSource_wx\\HotEngine\\Common",
			"C:\\Users\\mapho_000\\Downloads\\pa1-2\\work\\src",
			"D:\\dev\\whiterra\\repo\\bin\\res\\json",
			"D:\\dev\\hotlava\\HotSource_wx\\HotEngine\\Common",
			"D:\\dev\\hotlava\\HotSource_wx\\HotBox\\Common",
			"D:\\taken-from-work\\core\\ZombieBowling_iPad\\Main\\Src",
			"D:\\taken-from-work\\core\\ZombieBowling_iPad\\Main\\Src\\screens",
			"G:\\app\\Miranda_old\\Profiles\\Logs\\archived",
			"G:\\app\\Miranda\\Profiles\\Satana\\Logs",
			"D:\\dev\\whiterra\\repo",
			"D:\\dev\\whiterra\\rtr-res\\xml\\xml",
			"D:\\dev\\hotlava\\HotSource_wx\\HotStudio\\Common",
			"D:\\dev\\hotlava\\HotSource_wx\\HotEngine\\Common",
			"D:\\dev\\whiterra\\rtr-res\\xml\\xml",
			"D:\\dev\\qt5\\qttools\\src\\designer\\src",
			"D:\\dev\\qt5\\qttools\\src\\designer\\src\\components\\propertyeditor",
			"D:\\dev\\qt5\\qttools\\src\\designer",
			"D:\\dev\\qt5\\qttools\\src\\designer\\src\\lib\\sdk",
			"D:\\dev\\qt5\\qtbase\\include\\QtDesigner",
			"D:\\dev\\qt5\\qtbase\\include\\QtDesigner\\5.0.1\\QtDesigner\\private",
			"D:\\dev\\qt-creator\\src\\plugins\\designer",
			"D:\\dev\\hotlava\\HotSource_wx\\HotEngine\\Common",
			"D:\\dev\\whiterra\\NorthernTale2",
			"D:\\dev\\whiterra\\repo\\",
			"D:\\dev\\whiterra\\repo\\src",
			"D:\\dev\\whiterra\\NorthernTale2\\src\\editor\\MapEditor",
			"D:\\dev\\whiterra\\NorthernTale2\\src\\editor\\MapEditor\\MapEditorView",
			"D:\\dev\\whiterra\\NorthernTale2\\src\\editor\\MapEditor\\MapEditor",
			"D:\\dev\\hotlava\\HotSource_wx",
			"D:\\dev\\hotlava\\",
			"D:\\dev\\hotlava",
			"D:\\dev\\hotlava\\HotSource_wx\\HotEngine",
			"D:\\dev\\hotlava\\HotSource_wx",
			"D:\\dev\\whiterra\\NorthernTale2-mod\\src\\game",
			"D:\\dev\\whiterra\\NorthernTale2-mod\\proj",
			"D:\\dev\\hotlava\\mm4-main-ipad-free",
			"D:\\dev\\hotlava\\7-wonders-v",
			"D:\\dev\\hotlava\\7-wonders-iv",
			"D:\\dev\\hotlava\\7-wonders-iv\\Main_iPad",
			"D:\\dev\\HotSource_wx\\HotEngine",
			"D:\\dev\\_work\\code\\Pickers",
			"D:\\dev\\HotSource_wx\\HotEngine\\Common",
			"D:\\dev\\HotSource_wx\\HotSource",
			"D:\\dev\\HotSource_wx\\",
			"D:\\dev\\HotSource_wx\\HotEngine\\Common",
			"D:\\dev\\qt5"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"-f",
			"4и ",
			"43",
			"ld",
			"-g",
			"ParseDo",
			"declaration",
			"selection-statement",
			"designation",
			"initializer-list",
			"SALAT",
			"rightmostType",
			"leftmostType",
			"rightmostFirstType",
			"AnonymousTagCounter",
			"expression-statement",
			"declaration",
			"compound-state",
			"SymbolTable",
			"Struct",
			"\\}",
			"\\}\\",
			"\\{",
			"}",
			"specifier-qualifier-list",
			"parameter-list",
			"аватарк",
			"морков",
			"declaration",
			"compound-statement",
			"declare a as function returning pointer to array 2 of int",
			"declare a as array 2 of pointer to function returning int",
			"ParseDeclarator",
			"identifier-list",
			"FilterD",
			"ParseDeclarator",
			"CPointerSymbol",
			"ParsePointer",
			"Const",
			"declarator",
			"init-declarator",
			"declarator",
			"declaration-specifiers",
			"declaration-list",
			"declaration-specifiers declarator",
			"declaration-list",
			"declaration-specifiers declarator",
			"declaration-specifiers declarator \\{declaration-list\\}",
			"declaration-specifiers declarator \\{declaration-list\\} compound-statement",
			"declaration-specifiers declarator {declaration-list} compound-statement",
			"TablesContainer",
			"AddT",
			"TYPE",
			"ParseDeclaration",
			"TryParseDeclaration",
			"ParseBlock",
			"comp",
			"Compo",
			"compound-statement",
			"struct",
			"CTYpeSymbol",
			"declaration spe",
			"declarator",
			"direct-abstract-declarator",
			"init-declarat",
			"declarator",
			"declaration-specifiers",
			"TryParseDeclarator",
			"IdentFound",
			"ParseDeclarationSpec",
			"GetConst",
			"SetConst",
			"ConstClone",
			"const",
			"DeclSpec",
			"ParseInitDeclaratorList",
			"ParseDeclarationSpecifiers",
			"ParseTypedefSpecifier",
			"typedef-name",
			"type-specifier",
			"ParseDeclara",
			"CDeclarationSpecifier",
			"typedef-name",
			"type-specifier",
			"declaration-specifiers",
			"type-specifier",
			"storage-clas",
			"storage",
			"Pointer",
			"type-name",
			"enum",
			"ParsePointer",
			"CPointerSymbol",
			"GetQu",
			"CTypeSymbol",
			"FilterDuplicates",
			"ParsePointer",
			"Pointer",
			"CDecl",
			"InitOffset",
			"type-qualifier",
			"const`",
			"const",
			"pointer",
			"type-specifier",
			"specifier-qualifier-list",
			"type-name",
			"declaration-list",
			"ass",
			"type-qualifier",
			"type-qualifier-list",
			"declarator",
			"function-spec",
			"struct-declarator-list",
			"struct-declarator",
			"constant-expression",
			"'",
			"},",
			"OP",
			"O",
			"OP_STAR",
			"}",
			"},",
			"2",
			"{",
			"assert",
			"boost",
			"assoc"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"`",
			"\\1,",
			"\\1",
			"\\1Visual\"",
			"\\1Visual\",",
			"\"\\1\": \"\\2\",",
			"\"\\u\\1\\2\":",
			",\\n\"\\1\": \"\\2\",",
			"},",
			"{ \"@type\": \"\\1\",",
			"FrameDelay",
			"FramesPerSequence",
			"\"\\u\\1\\2\":",
			",\\n\"\\1\": \"\\2\",",
			"},",
			"{ \"@type\": \"\\1\",",
			"\"\\u\\1\\2\":",
			",\\n\"\\1\": \"\\2\",",
			"},",
			"{ \"@type\": \"\\1\",",
			"FramesPerSequence",
			"",
			"FrameDelay",
			"\"\\u\\1\\2\":",
			",\\n\"\\1\": \"\\2\",",
			"},",
			"{ \"@type\": \"\\1\",",
			"\"\\u\\1\\2\":",
			",\\n\"\\1\": \"\\2\",",
			"},",
			"{ \"@type\": \"\\1\",",
			"FrameDelay",
			"FramesPerSequence",
			"},",
			"\"\\u\\1\\2\":",
			",\\n\"\\1\": \"\\2\",",
			"},",
			"{ \"@type\": \"\\1\",",
			"}",
			"\"\\u\\1\\2\":",
			",\\n\"\\1\": \"\\2\",",
			"},",
			"{ \"@type\": \"\\1\",",
			"",
			"\nindentation",
			"\\1\nindentation",
			"\nindentation",
			"// nice support of n-spaces  I'm going to stick with spaces for all\nindentation",
			"",
			"\"\\u\\1\\2\":",
			",\\n\"\\1\": \"\\2\",",
			"},",
			"{ \"@type\": \"\\1\",",
			"\"\\u\\1\\2\":",
			"},",
			",\\n\"\\1\": \"\\2\",",
			",\"\\1\": \"\\2\",",
			"\"\\1\": \"\\2\",",
			"},",
			"{ \"@type\": \"\\1\",",
			"\"\\1\": \"\\2\",\\n",
			"\"\\1\": \"\\2\",",
			"\\",
			"",
			"../src/",
			"",
			"../src/",
			"\\\\",
			"\\t\\t\\\\",
			"\\t\\\\"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "doc/grammar.txt",
					"settings":
					{
						"buffer_size": 8759,
						"regions":
						{
						},
						"selection":
						[
							[
								1203,
								1203
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"encoding_helper_confidence": 0.938125,
							"encoding_helper_encoding": "UTF-8",
							"encoding_helper_encoding_sublime": "UTF-8",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"syntax": "Packages/Perl/Perl.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "tests/parser/099.t",
					"settings":
					{
						"buffer_size": 73,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"encoding_helper_confidence": 1.0,
							"encoding_helper_encoding": "UTF-8",
							"encoding_helper_encoding_sublime": "UTF-8",
							"syntax": "Packages/Perl/Perl.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/D/dev/whiterra/repo/game/game.pro",
					"settings":
					{
						"buffer_size": 22440,
						"regions":
						{
						},
						"selection":
						[
							[
								1621,
								1621
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"encoding_helper_confidence": 1.0,
							"encoding_helper_encoding": "UTF-8",
							"encoding_helper_encoding_sublime": "UTF-8",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 648.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "test-driver/Makefile.Release",
					"settings":
					{
						"buffer_size": 242417,
						"regions":
						{
						},
						"selection":
						[
							[
								1798,
								1798
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"encoding_helper_confidence": 1.0,
							"encoding_helper_encoding": "UTF-8",
							"encoding_helper_encoding_sublime": "UTF-8",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 38.0
	},
	"input":
	{
		"height": 45.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": false,
	"output.clang":
	{
		"height": 130.0
	},
	"output.exec":
	{
		"height": 132.0
	},
	"output.hex_viewer_inspector":
	{
		"height": 184.0
	},
	"replace":
	{
		"height": 68.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"99.t",
				"tests/parser/099.t"
			],
			[
				"test47.t",
				"tests/parser/047.t"
			],
			[
				"test47",
				"tests/parser/047.ref"
			],
			[
				"grammar",
				"doc/grammar"
			],
			[
				"gramm",
				"doc/grammar"
			],
			[
				"tests/parser/000",
				"tests/parser/000.t"
			],
			[
				".cpp",
				"src/main.cpp"
			],
			[
				"t000.t",
				"tests/parser/000.t"
			],
			[
				"t001.t",
				"tests/parser/001.t"
			],
			[
				"reso.json",
				"bin/res/json/resources.json"
			],
			[
				"templates.json",
				"bin/res/json/Levels/templates.json"
			],
			[
				"res",
				"bin/res/json/resources.json"
			],
			[
				"caustcpp",
				"src/fx_cCaustic.cpp"
			],
			[
				"resour",
				"bin/res/json/resources.json"
			],
			[
				"causth",
				"src/fx_cCaustic.h"
			],
			[
				"mapcobh",
				"src/map_cObject.h"
			],
			[
				"mapcobj",
				"src/map_cObject.cpp"
			],
			[
				"caus",
				"src/fx_cCaustic.cpp"
			],
			[
				"cgamefac.h",
				"src/game_cgamefacade.h"
			],
			[
				"todo",
				"doc/tasks.todo"
			],
			[
				"reso",
				"bin/res/json/resources.json"
			],
			[
				"resources.json",
				"bin/res/json/resources.json"
			],
			[
				"resjson",
				"bin/res/json/resources.json"
			],
			[
				"thou",
				"doc/thoughts.txt"
			],
			[
				"qlog",
				"build/build/qlog.log"
			],
			[
				"fx_pyro",
				"src/fx_PyroEffects.cpp"
			],
			[
				"gtimer",
				"3rd/engine/inc/gtimer.h"
			],
			[
				"doc/th",
				"doc/thoughts.txt"
			],
			[
				"core_wndutils",
				"src/core_wndUtils.h"
			],
			[
				"cmenuf",
				"src/menu_cMenuFacade.h"
			],
			[
				"cmenuefaca",
				"src/menu_cMenuFacade.cpp"
			],
			[
				"gutil.h",
				"3rd/engine/inc/gutil.h"
			],
			[
				"kindlemainjava",
				"HotSource_wx/HotSource_android_mk/proj_mm4_kindle_free/src/com/mumbojumbo/hotbox/Main.java"
			],
			[
				"mmmain.java",
				"HotSource_wx/HotSource_android_mk/proj_mm2/src/com/mumbojumbo/hotbox/Main.java"
			],
			[
				"amazon",
				"HotSource_wx/HotEngine/Platforms/Android/AmazonStore.cpp"
			],
			[
				"androidmk.mk",
				"HotSource_wx/HotSource_android_mk/jni/Shared.mk"
			],
			[
				"views",
				"hellboard/views.py"
			],
			[
				"views.py",
				"hellboard/views.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
		],
		"width": 380.0
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 173.0,
	"status_bar_visible": true
}
